{"version":3,"sources":["webpack://blog/./src/components/article-listing.tsx","webpack://blog/./src/pages/index.tsx"],"names":["StyledArticleListing","styled","ArticleTitle","Link","ArticleListing","slug","date","title","key","to","pages","useStaticQuery","allMarkdownRemark","edges","location","pathname","map","page","node","fields","frontmatter"],"mappings":"6KAIMA,EAAuBC,wBAAH,gFAAGA,CAAH,MAEpBC,GAAeD,QAAOE,MAAV,mFAAGF,CAAH,sBAILG,EAIR,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClB,OACE,gBAACP,EAAD,CAAsBQ,IAAKH,GACzB,gBAACH,EAAD,CAAcO,GAAE,YAAcJ,GAC3BE,EADH,MACaD,K,SC6CnB,EA1DuB,WACrB,IAmCMI,GApBFC,QAAe,cAoBOC,kBAAkBC,MAE5C,OACE,gBAAC,IAAD,CACEC,SAAU,CACRC,SAAU,KAEZR,MAAM,QAELG,EAAMM,KAAI,YAAoB,IAAXC,EAAW,EAAjBC,KACZ,OACE,gBAACd,EAAD,CACEC,KAAMY,EAAKE,OAAOd,KAClBC,KAAMW,EAAKG,YAAYd,KACvBC,MAAOU,EAAKG,YAAYb","file":"component---src-pages-index-tsx-f46b1d23f84bb1e2030f.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst StyledArticleListing = styled.article``;\n\nconst ArticleTitle = styled(Link)`\n  font-size: 1.3em;\n`;\n\nexport const ArticleListing: React.FC<{\n  slug: string;\n  date: string;\n  title: string;\n}> = ({ slug, date, title }) => {\n  return (\n    <StyledArticleListing key={slug}>\n      <ArticleTitle to={`/articles${slug}`}>\n        {title} - {date}\n      </ArticleTitle>\n    </StyledArticleListing>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport { ArticleListing } from \"../components/article-listing\";\nimport { Layout } from \"../components/layout\";\n\nconst Home: React.FC = () => {\n  const pagesResult: {\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          fields: {\n            slug: string;\n          };\n\n          frontmatter: {\n            date: string;\n            title: string;\n          };\n        };\n      }[];\n    };\n  } = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                date\n                title\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const pages = pagesResult.allMarkdownRemark.edges;\n\n  return (\n    <Layout\n      location={{\n        pathname: \"/\",\n      }}\n      title=\"home\"\n    >\n      {pages.map(({ node: page }) => {\n        return (\n          <ArticleListing\n            slug={page.fields.slug}\n            date={page.frontmatter.date}\n            title={page.frontmatter.title}\n          />\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}